 define pixel (p)
 define time (z)
 define vertical (y)
 define horizontal (x)
 define constant = (n+1 == n) 
 {
 grab p = y(1), x(1), z(1)
 compress p = 1
 ( 
 if p(1) = constant (y) , constant (x) , constant (z)
 then 
 print 
 p = constant(x), constant (y), constant(z)
 else 
 grab p +1 = (x =  last + 1 , y = last + 1, z = last + 1 )
 then
 if p + 1 = constant (y) , constant (x) , constant (z) 
 then 
 print  
 p + 1 = constant(x), constant (y), constant(z)
 fi
 )
 )
 
 
 haha 
 How to hack this axample:
 
 this is streamlined proposition for screen (map of pixels with x,y position -pixel adres)
 and what is happen to any pixel in time when video streaming
 function constant (c.onstant[t.imes]n.ew) where n.ew is pool of the same bits (every next bit is the 
 same in pool /[n+1=n] / as first before next different t times) is main function for data (changes) adressing
it is not working code in any language ,just so basic proposition/draft

(c.onstant[t.imes]n.ew)
(s.tatic["1"]n.ew)



for one frame (still image)


define pixel (p)
define vertical (y)
define horizontal (x)
{
p = y, x
define p(x) = y, x+1
define p(y) = y+1, p(x)
	{
	if p(x) = constant (x) , constant(y)
 then 
	print 
	p = constant(x), constant(y)
	 else 
	fill p = x,y
	else
    p(x)+1 = constant (x) , constant (y)+1 
         then 
	print 
	p = constant(x), constant (y)+1 
	else 
	fill p = x,y
	fi

}
}
